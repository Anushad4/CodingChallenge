# -*- coding: utf-8 -*-
"""Graph.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Glt0ufrkwFS1NrZFArvRlgGl_GebUR3p
"""

#-----graph----#
class graph:
  def __init__(self,edges):
    self.edges=edges
#     #trnasforming tuples into dict due to cost effective
    self.graphdict={}
    for s,e in self.edges:
      if s in self.graphdict:
         self.graphdict[s].append(e)
      else:
        self.graphdict[s]=[e]
    print(self.graphdict)
  
  def getpaths(self,s,e,path=[]):
    path=path+[s]
    if s==e:
      return [path]
    if s not in self.graphdict:
     return []
    paths=[]
    for node in self.graphdict[s]:
      if node not in path:
        newpaths=self.getpaths(node,e,path)
        for p in newpaths:
          paths.append(p)
    return paths



routes=[("m","p"),("m","dub"),("p","dub"),("p","new"),("dub","new"),("new","tor")]
r=graph(routes)
s="m"
e="new"
print(r.getpaths(s,e))
##{'m': ['p', 'dub'], 'p': ['dub', 'new'], 'dub': ['new'], 'new': ['tor']}
#[['m', 'p', 'dub', 'new'], ['m', 'p', 'new'], ['m', 'dub', 'new']]